library(lubridate)
library(qdapTools)
library(stringr)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Downloading Apple price using quantmod
getSymbols("AAPL", from = '2017-01-01',
to = "2018-03-01",warnings = FALSE,
auto.assign = TRUE)
delete.na <- function(DF, n=0) {
DF[rowSums(is.na(DF)) <= n,]
}
setwd("C:/Users/theco/Documents/top_manager_investments")
manager_df = data.frame(matrix(nrow = 1E5, ncol = 3))
colnames(manager_df) = c("date","company","sum")
iter = 1
a = list.files("manager_history")
for(date_fn in a){
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
}
}
}
manager_df = delete.na(manager_df)
manager_df
a
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
}
}
manager_df
manager_df = delete.na(manager_df)
manager_df
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
}
}
text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
companies
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
}
company
}
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
}
manager_df[iter,]$company
company
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
}
}
manager_df = delete.na(manager_df)
manager_df
date
manager_df[iter,]$date
iter = 1
manager_df[iter,]$date = date
manager_df[iter,]$company = company
manager_df[iter,]$date
manager_df[iter,]$company
manager_df = delete.na(manager_df)
manager_df
a = list.files("manager_history")
for(date_fn in a){
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
print
}
}
}
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
print
manager_df = delete.na(manager_df)
manager_df
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
print
}
}
manager_df
heada(manager_df)
head(manager_df)
iter = 1
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
head(manager_df)
manager_df = data.frame(matrix(nrow = 1E5, ncol = 3))
colnames(manager_df) = c("date","company")
iter = 1
a = list.files("manager_history")
for(date_fn in a){
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
print
}
}
}
manager_df = delete.na(manager_df)
{
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[iter,]$date = date
manager_df[iter,]$company = company
iter = iter + 1
print
}
}
manager_df
manager_df = data.frame(matrix(nrow = 0, ncol = 0))
colnames(manager_df) = c("date","company")
a = list.files("manager_history")
for(date_fn in a){
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[nrow(manager_df) + 1,] = c(date,company)
print
}
}
}
manager_df = data.frame(matrix(nrow = 0, ncol = 2))
colnames(manager_df) = c("date","company")
a = list.files("manager_history")
for(date_fn in a){
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]{3}<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[nrow(manager_df) + 1,] = c(date,company)
print
}
}
}
manager_df
df$Date <- as.Date( manager_df$date, '%m/%d/%Y')
require(ggplot2)
ggplot( data = manager_df, aes( date, company )) + geom_line()
mtabulate(manager_df$company)
plot(ts(mtabulate(manager_df$company)))
manager_df
substr(manager_df$date,4)
substr(manager_df$date,1,4)
substr(manager_df$date,4,2)
substr(manager_df$date,4,6)
substr(manager_df$date,4,7)
substr(manager_df$date,5,7)
substr(manager_df$date,5,6)
substr(manager_df$date,7,8)
manager_df$year = substr(manager_df$date,1,4)
manager_df$month = substr(manager_df$date,5,6)
manager_df$day = substr(manager_df$date,7,8)
manager_df
mtabulate(manager_df$company
)
mtabulate(manager_df$company)[1]
mtabulate(manager_df$company)[,1]
colnames(mtabulate(manager_df$company))
mtabulate(manager_df$company)$GOOG
manager_df = data.frame(matrix(nrow = 0, ncol = 2))
colnames(manager_df) = c("date","company")
a = list.files("manager_history")
for(date_fn in a){
date = substr(date_fn,1,8)
text = readtext(paste0("manager_history/",date_fn,"/www.dataroma.com/m/managers.php"))$text
companies = stri_match_all_regex(text,">[A-Z]+<")[[1]][,1]
for(company in companies){
company = sub(">","",company)
company = sub("<","",company)
company = regmatches(company,regexpr("[A-Z]+",company))
if(!identical(company, character(0))){
manager_df[nrow(manager_df) + 1,] = c(date,company)
print
}
}
}
manager_df$year = substr(manager_df$date,1,4)
manager_df$month = substr(manager_df$date,5,6)
manager_df$day = substr(manager_df$date,7,8)
manager_df
mtabulate(manager_df$company)$GOOG
plot(mtabulate(manager_df$company)$GOOG)
unique(manager_df[,c("month","year")])
for(month_year in month_years){
month = month_year[,2]
year = month_year[,2]
paste(month,year)
}
month_years = unique(manager_df[,c("month","year")])
for(month_year in month_years){
month = month_year[,2]
year = month_year[,2]
paste(month,year)
}
month_year
month_years
month_years[,1]
month_years[,2]
month_years[1,2]
for(i in nrow(month_years)){
month = month_years[i,1]
year = month_years[i,2]
paste(month,year)
}
nrow(month_years)
month_years[i,1]
month = month_years[i,1]
year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==month&year==year)
sub_manager_df
month
year
sub_manager_df
manager_df
manager_df %>% filter(month==month&year==year)
head(manager_df %>% filter(month==month&year==year))
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==month&year==year)
sub_manager_df
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
sub_manager_df
manager_df %>% filter(month==01)
manager_df %>% filter(month=="01")
manager_df
library(dplyr)
sub_manager_df = manager_df %>% filter(month=="01")
sub_manager_df
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
sub_manager_df
mtabulate(sub_manager_df$company)
sum(sub_manager_df$GOOG)
sum(sub_manager_df$GOOG)
sub_manager_df
counts = mtabulate(sub_manager_df$company)
counts$GOOD
counts$GOOG
sum(counts$GOOG)
counts[,"GOOG"]
nrow(month_years)
unique_companies = unique(manager_df[,c("company")])
unique_companies
month_years
unique_companies
unique_companies[1]
paste(month_years)
month_years
min(month_years)
min(month_years$year)
min(month_years$year):max(month_years$year)
month_year_all = c()
for(year_iter in min(month_years$year):max(month_years$year)){
for(month_iter in 1:12){
month_year_all = append(month_year_all,paste(month,year))
}
}
month_year_all
month_year_count_df = data.frame(matrix(nrow = nrow(month_year_all), ncol = length(unique_companies)))
rownames(month_year_count_df) = month_year_all
colnames(month_year_count_df) = unique_companies
nrow(month_year_all)
month_year_count_df = data.frame(matrix(nrow = length(month_year_all), ncol = length(unique_companies)))
rownames(month_year_count_df) = month_year_all
colnames(month_year_count_df) = unique_companies
month_year_count_df
rownames(month_year_count_df) = month_year_all
month_year_all
month_year_all = c()
for(year_iter in min(month_years$year):max(month_years$year)){
for(month_iter in 1:12){
month_year_all = append(month_year_all,paste(month_iter,year_iter))
}
}
month_year_count_df = data.frame(matrix(nrow = length(month_year_all), ncol = length(unique_companies)))
rownames(month_year_count_df) = month_year_all
colnames(month_year_count_df) = unique_companies
month_year_count_df
month_year_count_df[,2]
month_year_count_df[,3]
View(month_year_count_df)
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year)] sum(counts[,c])
}
paste(month,year)
}
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year)] = sum(counts[,c])
}
paste(month,year)
}
month_year_count_df
month_year_count_df$GOOG
month_year_count_df[paste(my_month,my_year),]
month_year_count_df = data.frame(matrix(0,nrow = length(month_year_all), ncol = length(unique_companies)))
rownames(month_year_count_df) = month_year_all
colnames(month_year_count_df) = unique_companies
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year),] = sum(counts[,c])
}
}
month_year_count_df$GOOG
month_year_count_df
month_year_count_df$MSFT
sum(counts[,c])
c
month_year_count_df[paste(my_month,my_year),c]
month_year_count_df = data.frame(matrix(0,nrow = length(month_year_all), ncol = length(unique_companies)))
rownames(month_year_count_df) = month_year_all
colnames(month_year_count_df) = unique_companies
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
}
month_year_count_df$GOOG
paste(my_month,my_year)
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
}
month_year_count_df$GOOG
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
print(paste(my_month,my_year))
print(c)
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
}
month_years[i,1]
month_years
for(i in nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
print(month_years[i,])
# sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
# counts = mtabulate(sub_manager_df$company)
# for(c in colnames(counts)){
#
#   print(c)
#   month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
# }
}
for(i in 1:nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
print(c)
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
}
for(i in 1:nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
}
month_year_count_df$GOOG
month_year_count_df = data.frame(matrix(0,nrow = length(month_year_all), ncol = length(unique_companies)))
rownames(month_year_count_df) = month_year_all
colnames(month_year_count_df) = unique_companies
for(i in 1:nrow(month_years)){
my_month = month_years[i,1]
my_year = month_years[i,2]
sub_manager_df = manager_df %>% filter(month==my_month&year==my_year)
counts = mtabulate(sub_manager_df$company)
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
}
month_year_count_df$GOOG
plot(month_year_count_df$GOOG)
ggplot( data = month_year_count_df, aes( rownames(month_year_count_df), "GOOG" ))
ggplot( x=rownames(month_year_count_df), y=month_year_count_df$GOOG" ))
)
ggplot( x=rownames(month_year_count_df), y=month_year_count_df$GOOG" )
ggplot( x=rownames(month_year_count_df), y=month_year_count_df$GOOG )
for(c in colnames(counts)){
month_year_count_df[paste(my_month,my_year),c] = sum(counts[,c])
}
month_year_count_df$GOOG
ggplot() + geom_line(data = month_year_count_df, aes(x = id, y = value, color = func, group = func), size = 1)
ggplot() + geom_line(data = month_year_count_df, aes( y = GOOG, size = 1)
)
ggplot() + geom_line(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = GOOG, size = 1))
ggplot(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = GOOG, size = 1)
)
ggplot(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = GOOG, size = 1))\
ggplot(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = GOOG, size = 1))
ggplot(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = GOOG, size = 1)) + geom_line()
ggplot(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = value, size = 1)) + geom_line(aes(colour = series))
5
ggplot(data = month_year_count_df, aes(x = row.names(month_year_count_df), y = value)) + geom_line(aes(colour = series))
matplot(month_year_count_df, type="l", ylim=c(0,0.3), lwd=4, col=1:5, lty=1)
month_year_count_df
month_year_count_df$GOOG
